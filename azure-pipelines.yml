pool:
  vmImage: ubuntu-latest
stages:
- stage: Build 
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
      displayName: 'Build app'
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: |
            **/build/libs/*.jar
        targetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy files'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: appJar
        publishLocation: 'Container'
      displayName: 'Publish artifact'

- stage: SAST 
  jobs:
  - job: SAST
    displayName:  'SAST'
    steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'sonarcloud'
          organization: 'nearavenac-devops'
          projectKey: 'nearavenac-devops_spring-boot-kubernetes'
          projectName: 'spring-boot-kubernetes'
        displayName: 'Preparing Sonarqube Environment'
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest'
        displayName: 'Analyze current Branch'
      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'sonarcloud'
          organization: 'nearavenac-devops'
        displayName: 'SonarCloud Breaker'

- stage: SCA 
  jobs:
  - job: SCA
    displayName: 'SCA'
    steps:
      - task: dependency-check-build-task@6
        inputs:
          projectName: 'spring-boot-kubernetes'
          scanPath: '$(Build.ArtifactStagingDirectory)'
          format: 'HTML'
          failOnCVSS: '10'
        displayName: 'Dependency Check'

- stage: ContainerSecurity 
  jobs:
  - job: ContainerSecurity
    displayName: 'Container Security'
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'appJar'
          downloadPath: '$(Pipeline.Workspace)'
        displayName: 'Download JAR'
    
      - script: "mkdir -p build/libs; mv $(Pipeline.Workspace)/appJar/build/libs/ build/; chmod -R 555 build/libs"  
        displayName:  'Move jar'
      
      - task: DockerInstaller@0
        inputs:
          dockerVersion: '17.09.0-ce'
        displayName: 'Docker Install'
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker'
          command: 'login'
        displayName: 'Docker Registry Login'
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker'
          repository: 'nearavenac/spring-boot-kubernetes'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: 'latest'
        displayName: 'Build Image'
      - task: trivy@1
        inputs:
          version: 'latest'
          image: 'nearavenac/spring-boot-kubernetes'
          exitCode: '0'
        displayName: 'Trivy Analisys'
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker'
          repository: 'nearavenac/spring-boot-kubernetes'
          command: 'push'
          tags: 'latest'
        displayName: 'Push Docker Image'
